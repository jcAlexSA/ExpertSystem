<Window
    x:Class="ExpertSystem.View.RuleBlockView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ExpertSystem.ViewModel"
    xmlns:multiConverter="clr-namespace:ExpertSystem.Model"
    Title="RuleBlockWizard"
    Width="549"
    Height="394"
    MinWidth="495"
    MinHeight="330"
    ResizeMode="CanMinimize"
    WindowStartupLocation="CenterOwner">

    <Window.DataContext>
        <local:CreateRuleBlockViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!--  converter  -->
        <multiConverter:MultiParametersConverter x:Key="MultiParametersConverter" />
        <!--  textBlock  -->
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <!--  textBox  -->
        <Style TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Background" Value="Lavender" />
        </Style>
        <!--  Buttons window controllers  -->
        <Style x:Key="ButtonWindowControlStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="RoyalBlue" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="130" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="CornflowerBlue" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3B53D9" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  Buttons variable controllers  -->
        <Style x:Key="ButtonVariableControlStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="SlateGray" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="Margin" Value="3,8" />
            <Setter Property="Height" Value="20" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#A2ACB7" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5A7188" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="0.1*" MinHeight="40" />
        </Grid.RowDefinitions>

        <DockPanel VerticalAlignment="Stretch" LastChildFill="True">
            <GroupBox
                Margin="15,5,15,5"
                BorderBrush="LightGray"
                DockPanel.Dock="Top"
                Header="Define Rule Block Configuration">
                <TextBlock
                    Margin="5"
                    Text="The Rule Block Wizard will help you to create a complete rule block with an initial set of rules. You are may alter all rules individually with the tule block editors. In this step you have to specify the rule block name and the input and output variables for the block"
                    TextAlignment="Justify"
                    TextWrapping="Wrap" />
            </GroupBox>

            <DockPanel Margin="30,0" DockPanel.Dock="Top">
                <TextBlock
                    Margin="5"
                    DockPanel.Dock="Left"
                    Text="Rule Block Name: " />
                <TextBox
                    Background="Lavender"
                    DockPanel.Dock="Right"
                    Text="{Binding Path=RuleBlock.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>

            <Border
                Margin="20,5"
                BorderBrush="SlateGray"
                BorderThickness="1"
                CornerRadius="5"
                DockPanel.Dock="Top">

                <Grid Margin="5,0,5,8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.1*" MinHeight="20" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" MinWidth="100" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Variables: " />
                    <ScrollViewer Grid.Row="1" Margin="5,0">
                        <ListBox
                            Name="ReceivedVariblesListBox"
                            Background="#F4F4FD"
                            ItemsSource="{Binding Path=SendedFuzzyVariables}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>

                    <StackPanel
                        Grid.RowSpan="3"
                        Grid.Column="1"
                        VerticalAlignment="Center">
                        <!--<StackPanel.Resources>
                        <multiConverter:MultiParametersConverter x:Key="multiParamConverter" />
                    </StackPanel.Resources>-->
                        <Button
                            Command="{Binding ToInputListCommand}"
                            CommandParameter="{Binding ElementName=ReceivedVariblesListBox, Path=SelectedIndex}"
                            Content="Input"
                            Style="{StaticResource ButtonVariableControlStyle}">
                            <!--<Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource multiParamConverter}">
                                <Binding ElementName="ReceivedVariblesListBox" Path="SelectedIndex" />
                                <Binding ElementName="ReceivedVariblesListBox" Path="IsKeyboardFocusWithin" />
                            </MultiBinding>
                        </Button.CommandParameter>-->
                        </Button>
                        <Button
                            Command="{Binding ToOutputListCommand}"
                            CommandParameter="{Binding ElementName=ReceivedVariblesListBox, Path=SelectedIndex}"
                            Content="Output"
                            Style="{StaticResource ButtonVariableControlStyle}">
                            <!--<Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource multiParamConverter}">
                                <Binding ElementName="ReceivedVariblesListBox" Path="SelectedIndex" />
                                <Binding ElementName="ReceivedVariblesListBox" Path="IsKeyboardFocusWithin" />
                            </MultiBinding>
                        </Button.CommandParameter>-->
                        </Button>

                        <Button
                            Command="{Binding RemoveVartiableFromRuleBlockCommand}"
                            Content="Remove"
                            Style="{StaticResource ButtonVariableControlStyle}">
                            <Button.CommandParameter>
                                <MultiBinding Converter="{StaticResource ResourceKey=MultiParametersConverter}">
                                    <Binding ElementName="InputVariablesListBox" />
                                    <Binding ElementName="OutputVariablesListBox" />
                                </MultiBinding>
                            </Button.CommandParameter>
                        </Button>
                    </StackPanel>

                    <TextBlock Grid.Column="2" Text="Input:" />
                    <ScrollViewer
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="3,0">
                        <ListBox
                            SelectionMode="Multiple"
                            Name="InputVariablesListBox"
                            Background="#F4F4FD"
                            ItemsSource="{Binding Path=RuleBlock.InputVariables, Mode=TwoWay}">
                            <!--  this trigger need to unselect items if focue leaved  -->
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=InputVariablesListBox, Path=IsKeyboardFocusWithin}" Value="False" />
                                                <Condition Binding="{Binding ElementName=OutputVariablesListBox, Path=IsKeyboardFocusWithin}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="SelectedIndex" Value="-1" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>

                    <TextBlock Grid.Column="3" Text="Output:" />
                    <ScrollViewer
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="3,0">
                        <ListBox
                            Name="OutputVariablesListBox"
                            Background="#F4F4FD"
                            ItemsSource="{Binding Path=RuleBlock.OutputVatiables, Mode=TwoWay}">
                            <!--  this trigger need to unselect items if focue leaved  -->
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=InputVariablesListBox, Path=IsKeyboardFocusWithin}" Value="True" />
                                                <Condition Binding="{Binding ElementName=OutputVariablesListBox, Path=IsKeyboardFocusWithin}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="SelectedIndex" Value="-1" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                </Grid>
            </Border>
        </DockPanel>

        <StackPanel
            Grid.Row="1"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Margin="15,5"
                Command="{Binding AddRuleBlockCommand}"
                Content="OK"
                Style="{StaticResource ButtonWindowControlStyle}" />
            <Button
                Margin="15,5"
                Command="{Binding CloseCommand}"
                Content="Cancel"
                Style="{StaticResource ButtonWindowControlStyle}" />
        </StackPanel>

    </Grid>

</Window>
